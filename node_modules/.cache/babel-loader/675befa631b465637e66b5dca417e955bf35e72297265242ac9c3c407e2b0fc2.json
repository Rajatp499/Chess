{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\chess\\\\src\\\\Components\\\\Chessboard.tsx\";\nimport \"./Chessboard.css\";\nimport Tile from \"./Tile\";\n\n//images\nimport pawn_w from \"../Pieces/pawn_w.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet x = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\nlet y = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\nconst Chessboard = () => {\n  let board = [];\n  let i, j;\n  const piece = [];\n  piece.push({\n    image: pawn_w,\n    x: 'a',\n    y: 1\n  });\n  for (i = 0; i <= 7; i++) {\n    for (j = 0; j <= 7; j++) {\n      const num = i + j + 2;\n      console.log(x[j], y[i]);\n      let image = undefined;\n      piece.forEach(p => {\n        if (p.x === x[j] && p.y === y[i]) {\n          image = p.image;\n        }\n      });\n      board.push( /*#__PURE__*/_jsxDEV(Tile, {\n        image: image,\n        num: num\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 18\n      }, this));\n\n      //white Pieces\n      // if (y[i] == \"2\")\n      //   board.push(<Tile image={pawn_w} num={num} x={x[j]} y={y[i]} />);\n      // else if ((x[j] == \"a\" && y[i] == \"1\") || (x[j] == \"h\" && y[i] == \"1\"))\n      //   board.push(<Tile image={rook_w} num={num} x={x[j]} y={y[i]} />);\n      // else if ((x[j] == \"b\" && y[i] == \"1\") || (x[j] == \"g\" && y[i] == \"1\"))\n      //   board.push(<Tile image={knight_w} num={num} x={x[j]} y={y[i]} />);\n      // else if ((x[j] == \"c\" && y[i] == \"1\") || (x[j] == \"f\" && y[i] == \"1\"))\n      //   board.push(<Tile image={bishop_w} num={num} x={x[j]} y={y[i]} />);\n      // else if (x[j] == \"d\" && y[i] == \"1\")\n      //   board.push(<Tile image={queen_w} num={num} x={x[j]} y={y[i]} />);\n      // else if (x[j] == \"e\" && y[i] == \"1\")\n      //   board.push(<Tile image={king_w} num={num} x={x[j]} y={y[i]} />);\n      // else if ((x[j] == \"a\" && y[i] == \"1\") || (x[j] == \"h\" && y[i] == \"1\"))\n      //   board.push(<Tile image={rook_w} num={num} x={x[j]} y={y[i]} />);\n      //Black Pieces\n      //     else if (y[i] == \"7\")\n      //       board.push(<Tile image={pawn_b} num={num} x={x[j]} y={y[i]} />);\n      //     else if ((x[j] == \"a\" && y[i] == \"8\") || (x[j] == \"h\" && y[i] == \"8\"))\n      //       board.push(<Tile image={rook_b} num={num} x={x[j]} y={y[i]} />);\n      //     else if ((x[j] == \"b\" && y[i] == \"8\") || (x[j] == \"g\" && y[i] == \"8\"))\n      //       board.push(<Tile image={knight_b} num={num} x={x[j]} y={y[i]} />);\n      //     else if ((x[j] == \"c\" && y[i] == \"8\") || (x[j] == \"f\" && y[i] == \"8\"))\n      //       board.push(<Tile image={bishop_b} num={num} x={x[j]} y={y[i]} />);\n      //     else if (x[j] == \"d\" && y[i] == \"8\")\n      //       board.push(<Tile image={queen_b} num={num} x={x[j]} y={y[i]} />);\n      //     else if (x[j] == \"e\" && y[i] == \"8\")\n      //       board.push(<Tile image={king_b} num={num} x={x[j]} y={y[i]} />);\n      //     else if ((x[j] == \"a\" && y[i] == \"1\") || (x[j] == \"h\" && y[i] == \"1\"))\n      //       board.push(<Tile image={rook_w} num={num} x={x[j]} y={y[i]} />);\n      //     else board.push(<Tile num={num} x={x[j]} y={y[i]} />);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chessboard\",\n    children: board\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 10\n  }, this);\n};\n_c = Chessboard;\nexport default Chessboard;\n//{x[j]}{y[i]}\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["Tile","pawn_w","jsxDEV","_jsxDEV","x","y","Chessboard","board","i","j","piece","push","image","num","console","log","undefined","forEach","p","fileName","_jsxFileName","lineNumber","columnNumber","id","children","_c","$RefreshReg$"],"sources":["C:/React/chess/src/Components/Chessboard.tsx"],"sourcesContent":["import \"./Chessboard.css\";\r\nimport Tile from \"./Tile\";\r\n\r\n//images\r\nimport pawn_w from \"../Pieces/pawn_w.png\";\r\nimport pawn_b from \"../Pieces/pawn_b.png\";\r\nimport rook_w from \"../Pieces/rook_w.png\";\r\nimport rook_b from \"../Pieces/rook_b.png\";\r\nimport bishop_w from \"../Pieces/bishop_w.png\";\r\nimport bishop_b from \"../Pieces/bishop_b.png\";\r\nimport knight_w from \"../Pieces/knight_w.png\";\r\nimport knight_b from \"../Pieces/knight_b.png\";\r\nimport queen_w from \"../Pieces/queen_w.png\";\r\nimport queen_b from \"../Pieces/queen_b.png\";\r\nimport king_w from \"../Pieces/king_w.png\";\r\nimport king_b from \"../Pieces/king_b.png\";\r\nimport path from \"path\";\r\n\r\nlet x = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\r\nlet y = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\r\n\r\ninterface Pieces{\r\n  image?: string;\r\n  x:string;\r\n  y:string;\r\n}\r\n\r\nconst Chessboard = () => {\r\n  let board: any = [];\r\n  let i:any, j:any;\r\n  const piece: Pieces[] =[];\r\n\r\n  piece.push({image:pawn_w , x:'a' , y:1})\r\n\r\n  for (i = 0; i <= 7; i++) {\r\n    for (j = 0; j <= 7; j++) {\r\n      const num = i + j + 2;\r\n      console.log(x[j], y[i]);\r\n      let image = undefined;\r\n\r\n      piece.forEach(p =>{\r\n        if(p.x === x[j] && p.y === y[i]){\r\n          image = p.image;\r\n\r\n        }\r\n      })\r\n      board.push(<Tile image={image} num= {num}  />)\r\n\r\n\r\n      //white Pieces\r\n      // if (y[i] == \"2\")\r\n      //   board.push(<Tile image={pawn_w} num={num} x={x[j]} y={y[i]} />);\r\n      // else if ((x[j] == \"a\" && y[i] == \"1\") || (x[j] == \"h\" && y[i] == \"1\"))\r\n      //   board.push(<Tile image={rook_w} num={num} x={x[j]} y={y[i]} />);\r\n      // else if ((x[j] == \"b\" && y[i] == \"1\") || (x[j] == \"g\" && y[i] == \"1\"))\r\n      //   board.push(<Tile image={knight_w} num={num} x={x[j]} y={y[i]} />);\r\n      // else if ((x[j] == \"c\" && y[i] == \"1\") || (x[j] == \"f\" && y[i] == \"1\"))\r\n      //   board.push(<Tile image={bishop_w} num={num} x={x[j]} y={y[i]} />);\r\n      // else if (x[j] == \"d\" && y[i] == \"1\")\r\n      //   board.push(<Tile image={queen_w} num={num} x={x[j]} y={y[i]} />);\r\n      // else if (x[j] == \"e\" && y[i] == \"1\")\r\n      //   board.push(<Tile image={king_w} num={num} x={x[j]} y={y[i]} />);\r\n      // else if ((x[j] == \"a\" && y[i] == \"1\") || (x[j] == \"h\" && y[i] == \"1\"))\r\n      //   board.push(<Tile image={rook_w} num={num} x={x[j]} y={y[i]} />);\r\n      //Black Pieces\r\n  //     else if (y[i] == \"7\")\r\n  //       board.push(<Tile image={pawn_b} num={num} x={x[j]} y={y[i]} />);\r\n  //     else if ((x[j] == \"a\" && y[i] == \"8\") || (x[j] == \"h\" && y[i] == \"8\"))\r\n  //       board.push(<Tile image={rook_b} num={num} x={x[j]} y={y[i]} />);\r\n  //     else if ((x[j] == \"b\" && y[i] == \"8\") || (x[j] == \"g\" && y[i] == \"8\"))\r\n  //       board.push(<Tile image={knight_b} num={num} x={x[j]} y={y[i]} />);\r\n  //     else if ((x[j] == \"c\" && y[i] == \"8\") || (x[j] == \"f\" && y[i] == \"8\"))\r\n  //       board.push(<Tile image={bishop_b} num={num} x={x[j]} y={y[i]} />);\r\n  //     else if (x[j] == \"d\" && y[i] == \"8\")\r\n  //       board.push(<Tile image={queen_b} num={num} x={x[j]} y={y[i]} />);\r\n  //     else if (x[j] == \"e\" && y[i] == \"8\")\r\n  //       board.push(<Tile image={king_b} num={num} x={x[j]} y={y[i]} />);\r\n  //     else if ((x[j] == \"a\" && y[i] == \"1\") || (x[j] == \"h\" && y[i] == \"1\"))\r\n  //       board.push(<Tile image={rook_w} num={num} x={x[j]} y={y[i]} />);\r\n  //     else board.push(<Tile num={num} x={x[j]} y={y[i]} />);\r\n    }\r\n  }\r\n  return <div id=\"chessboard\">{board}</div>;\r\n\r\n};\r\n\r\nexport default Chessboard;\r\n//{x[j]}{y[i]}\r\n\r\n"],"mappings":";AAAA,OAAO,kBAAkB;AACzB,OAAOA,IAAI,MAAM,QAAQ;;AAEzB;AACA,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAc1C,IAAIC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAChD,IAAIC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAQhD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB,IAAIC,KAAU,GAAG,EAAE;EACnB,IAAIC,CAAK,EAAEC,CAAK;EAChB,MAAMC,KAAe,GAAE,EAAE;EAEzBA,KAAK,CAACC,IAAI,CAAC;IAACC,KAAK,EAACX,MAAM;IAAGG,CAAC,EAAC,GAAG;IAAGC,CAAC,EAAC;EAAC,CAAC,CAAC;EAExC,KAAKG,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IACvB,KAAKC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MACvB,MAAMI,GAAG,GAAGL,CAAC,GAAGC,CAAC,GAAG,CAAC;MACrBK,OAAO,CAACC,GAAG,CAACX,CAAC,CAACK,CAAC,CAAC,EAAEJ,CAAC,CAACG,CAAC,CAAC,CAAC;MACvB,IAAII,KAAK,GAAGI,SAAS;MAErBN,KAAK,CAACO,OAAO,CAACC,CAAC,IAAG;QAChB,IAAGA,CAAC,CAACd,CAAC,KAAKA,CAAC,CAACK,CAAC,CAAC,IAAIS,CAAC,CAACb,CAAC,KAAKA,CAAC,CAACG,CAAC,CAAC,EAAC;UAC9BI,KAAK,GAAGM,CAAC,CAACN,KAAK;QAEjB;MACF,CAAC,CAAC;MACFL,KAAK,CAACI,IAAI,eAACR,OAAA,CAACH,IAAI;QAACY,KAAK,EAAEA,KAAM;QAACC,GAAG,EAAGA;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,CAAC;;MAG9C;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACJ;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACE;EACF;;EACA,oBAAOnB,OAAA;IAAKoB,EAAE,EAAC,YAAY;IAAAC,QAAA,EAAEjB;EAAK;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAE3C,CAAC;AAACG,EAAA,GAzDInB,UAAU;AA2DhB,eAAeA,UAAU;AACzB;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}